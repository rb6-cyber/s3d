# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/libg3d
pkglibdir = $(libdir)/libg3d
pkgincludedir = $(includedir)/libg3d
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/missing --run automake-1.7
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DBG_CFLAGS = -O2
DEBUG = 0
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
EXEEXT = 
F77 = 
FFLAGS = 
GDKPIXBUF_CFLAGS = 
GDKPIXBUF_LIBS = 
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GOBJECT_QUERY = gobject-query
GTK_CFLAGS = 
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_LIBS = 
HAVE_GDKPIXBUF_FALSE = 
HAVE_GDKPIXBUF_TRUE = #
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/missing --run makeinfo
OBJEXT = o
PACKAGE = libg3d
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PLUGINS_LDFLAGS = -avoid-version -export-dynamic
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.0.3
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/bigm/Desktop/libg3d-0.0.3/libg3d-0.0.3/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
lib_LTLIBRARIES = libg3d.la

libg3d_la_SOURCES = \
	context.c \
	plugins.c \
	model.c \
	object.c \
	face.c \
	material.c \
	texture.c \
	read.c \
	iff.c \
	primitive.c \
	vector.c \
	matrix.c


INCLUDES = -I$(top_builddir)/include

libg3d_la_CFLAGS = \
	-Wall -ansi -pedantic \
	-fstrict-aliasing -Wstrict-aliasing \
	-O2 \
	-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  


libg3d_la_LDFLAGS = \
	-version-number "$(subst .,:,0.0.3)"


libg3d_la_LIBADD = \
	-Wl,--export-dynamic -lgmodule-2.0 -ldl -lgobject-2.0 -lglib-2.0  

subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/g3d/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libg3d_la_DEPENDENCIES =
am_libg3d_la_OBJECTS = libg3d_la-context.lo libg3d_la-plugins.lo \
	libg3d_la-model.lo libg3d_la-object.lo libg3d_la-face.lo \
	libg3d_la-material.lo libg3d_la-texture.lo libg3d_la-read.lo \
	libg3d_la-iff.lo libg3d_la-primitive.lo libg3d_la-vector.lo \
	libg3d_la-matrix.lo
libg3d_la_OBJECTS = $(am_libg3d_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include/g3d
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libg3d_la-context.Plo \
	./$(DEPDIR)/libg3d_la-face.Plo \
	./$(DEPDIR)/libg3d_la-iff.Plo \
	./$(DEPDIR)/libg3d_la-material.Plo \
	./$(DEPDIR)/libg3d_la-matrix.Plo \
	./$(DEPDIR)/libg3d_la-model.Plo \
	./$(DEPDIR)/libg3d_la-object.Plo \
	./$(DEPDIR)/libg3d_la-plugins.Plo \
	./$(DEPDIR)/libg3d_la-primitive.Plo \
	./$(DEPDIR)/libg3d_la-read.Plo \
	./$(DEPDIR)/libg3d_la-texture.Plo \
	./$(DEPDIR)/libg3d_la-vector.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libg3d_la_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(libg3d_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libg3d.la: $(libg3d_la_OBJECTS) $(libg3d_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libg3d_la_LDFLAGS) $(libg3d_la_OBJECTS) $(libg3d_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libg3d_la-context.Plo
include ./$(DEPDIR)/libg3d_la-face.Plo
include ./$(DEPDIR)/libg3d_la-iff.Plo
include ./$(DEPDIR)/libg3d_la-material.Plo
include ./$(DEPDIR)/libg3d_la-matrix.Plo
include ./$(DEPDIR)/libg3d_la-model.Plo
include ./$(DEPDIR)/libg3d_la-object.Plo
include ./$(DEPDIR)/libg3d_la-plugins.Plo
include ./$(DEPDIR)/libg3d_la-primitive.Plo
include ./$(DEPDIR)/libg3d_la-read.Plo
include ./$(DEPDIR)/libg3d_la-texture.Plo
include ./$(DEPDIR)/libg3d_la-vector.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libg3d_la-context.o: context.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-context.o -MD -MP -MF "$(DEPDIR)/libg3d_la-context.Tpo" \
	  -c -o libg3d_la-context.o `test -f 'context.c' || echo '$(srcdir)/'`context.c; \
	then mv -f "$(DEPDIR)/libg3d_la-context.Tpo" "$(DEPDIR)/libg3d_la-context.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-context.Tpo"; exit 1; \
	fi
#	source='context.c' object='libg3d_la-context.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-context.Po' tmpdepfile='$(DEPDIR)/libg3d_la-context.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-context.o `test -f 'context.c' || echo '$(srcdir)/'`context.c

libg3d_la-context.obj: context.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-context.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-context.Tpo" \
	  -c -o libg3d_la-context.obj `if test -f 'context.c'; then $(CYGPATH_W) 'context.c'; else $(CYGPATH_W) '$(srcdir)/context.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-context.Tpo" "$(DEPDIR)/libg3d_la-context.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-context.Tpo"; exit 1; \
	fi
#	source='context.c' object='libg3d_la-context.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-context.Po' tmpdepfile='$(DEPDIR)/libg3d_la-context.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-context.obj `if test -f 'context.c'; then $(CYGPATH_W) 'context.c'; else $(CYGPATH_W) '$(srcdir)/context.c'; fi`

libg3d_la-context.lo: context.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-context.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-context.Tpo" \
	  -c -o libg3d_la-context.lo `test -f 'context.c' || echo '$(srcdir)/'`context.c; \
	then mv -f "$(DEPDIR)/libg3d_la-context.Tpo" "$(DEPDIR)/libg3d_la-context.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-context.Tpo"; exit 1; \
	fi
#	source='context.c' object='libg3d_la-context.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-context.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-context.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-context.lo `test -f 'context.c' || echo '$(srcdir)/'`context.c

libg3d_la-plugins.o: plugins.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-plugins.o -MD -MP -MF "$(DEPDIR)/libg3d_la-plugins.Tpo" \
	  -c -o libg3d_la-plugins.o `test -f 'plugins.c' || echo '$(srcdir)/'`plugins.c; \
	then mv -f "$(DEPDIR)/libg3d_la-plugins.Tpo" "$(DEPDIR)/libg3d_la-plugins.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-plugins.Tpo"; exit 1; \
	fi
#	source='plugins.c' object='libg3d_la-plugins.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-plugins.Po' tmpdepfile='$(DEPDIR)/libg3d_la-plugins.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-plugins.o `test -f 'plugins.c' || echo '$(srcdir)/'`plugins.c

libg3d_la-plugins.obj: plugins.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-plugins.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-plugins.Tpo" \
	  -c -o libg3d_la-plugins.obj `if test -f 'plugins.c'; then $(CYGPATH_W) 'plugins.c'; else $(CYGPATH_W) '$(srcdir)/plugins.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-plugins.Tpo" "$(DEPDIR)/libg3d_la-plugins.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-plugins.Tpo"; exit 1; \
	fi
#	source='plugins.c' object='libg3d_la-plugins.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-plugins.Po' tmpdepfile='$(DEPDIR)/libg3d_la-plugins.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-plugins.obj `if test -f 'plugins.c'; then $(CYGPATH_W) 'plugins.c'; else $(CYGPATH_W) '$(srcdir)/plugins.c'; fi`

libg3d_la-plugins.lo: plugins.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-plugins.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-plugins.Tpo" \
	  -c -o libg3d_la-plugins.lo `test -f 'plugins.c' || echo '$(srcdir)/'`plugins.c; \
	then mv -f "$(DEPDIR)/libg3d_la-plugins.Tpo" "$(DEPDIR)/libg3d_la-plugins.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-plugins.Tpo"; exit 1; \
	fi
#	source='plugins.c' object='libg3d_la-plugins.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-plugins.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-plugins.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-plugins.lo `test -f 'plugins.c' || echo '$(srcdir)/'`plugins.c

libg3d_la-model.o: model.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-model.o -MD -MP -MF "$(DEPDIR)/libg3d_la-model.Tpo" \
	  -c -o libg3d_la-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c; \
	then mv -f "$(DEPDIR)/libg3d_la-model.Tpo" "$(DEPDIR)/libg3d_la-model.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-model.Tpo"; exit 1; \
	fi
#	source='model.c' object='libg3d_la-model.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-model.Po' tmpdepfile='$(DEPDIR)/libg3d_la-model.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c

libg3d_la-model.obj: model.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-model.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-model.Tpo" \
	  -c -o libg3d_la-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-model.Tpo" "$(DEPDIR)/libg3d_la-model.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-model.Tpo"; exit 1; \
	fi
#	source='model.c' object='libg3d_la-model.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-model.Po' tmpdepfile='$(DEPDIR)/libg3d_la-model.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`

libg3d_la-model.lo: model.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-model.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-model.Tpo" \
	  -c -o libg3d_la-model.lo `test -f 'model.c' || echo '$(srcdir)/'`model.c; \
	then mv -f "$(DEPDIR)/libg3d_la-model.Tpo" "$(DEPDIR)/libg3d_la-model.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-model.Tpo"; exit 1; \
	fi
#	source='model.c' object='libg3d_la-model.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-model.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-model.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-model.lo `test -f 'model.c' || echo '$(srcdir)/'`model.c

libg3d_la-object.o: object.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-object.o -MD -MP -MF "$(DEPDIR)/libg3d_la-object.Tpo" \
	  -c -o libg3d_la-object.o `test -f 'object.c' || echo '$(srcdir)/'`object.c; \
	then mv -f "$(DEPDIR)/libg3d_la-object.Tpo" "$(DEPDIR)/libg3d_la-object.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-object.Tpo"; exit 1; \
	fi
#	source='object.c' object='libg3d_la-object.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-object.Po' tmpdepfile='$(DEPDIR)/libg3d_la-object.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-object.o `test -f 'object.c' || echo '$(srcdir)/'`object.c

libg3d_la-object.obj: object.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-object.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-object.Tpo" \
	  -c -o libg3d_la-object.obj `if test -f 'object.c'; then $(CYGPATH_W) 'object.c'; else $(CYGPATH_W) '$(srcdir)/object.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-object.Tpo" "$(DEPDIR)/libg3d_la-object.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-object.Tpo"; exit 1; \
	fi
#	source='object.c' object='libg3d_la-object.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-object.Po' tmpdepfile='$(DEPDIR)/libg3d_la-object.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-object.obj `if test -f 'object.c'; then $(CYGPATH_W) 'object.c'; else $(CYGPATH_W) '$(srcdir)/object.c'; fi`

libg3d_la-object.lo: object.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-object.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-object.Tpo" \
	  -c -o libg3d_la-object.lo `test -f 'object.c' || echo '$(srcdir)/'`object.c; \
	then mv -f "$(DEPDIR)/libg3d_la-object.Tpo" "$(DEPDIR)/libg3d_la-object.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-object.Tpo"; exit 1; \
	fi
#	source='object.c' object='libg3d_la-object.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-object.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-object.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-object.lo `test -f 'object.c' || echo '$(srcdir)/'`object.c

libg3d_la-face.o: face.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-face.o -MD -MP -MF "$(DEPDIR)/libg3d_la-face.Tpo" \
	  -c -o libg3d_la-face.o `test -f 'face.c' || echo '$(srcdir)/'`face.c; \
	then mv -f "$(DEPDIR)/libg3d_la-face.Tpo" "$(DEPDIR)/libg3d_la-face.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-face.Tpo"; exit 1; \
	fi
#	source='face.c' object='libg3d_la-face.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-face.Po' tmpdepfile='$(DEPDIR)/libg3d_la-face.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-face.o `test -f 'face.c' || echo '$(srcdir)/'`face.c

libg3d_la-face.obj: face.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-face.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-face.Tpo" \
	  -c -o libg3d_la-face.obj `if test -f 'face.c'; then $(CYGPATH_W) 'face.c'; else $(CYGPATH_W) '$(srcdir)/face.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-face.Tpo" "$(DEPDIR)/libg3d_la-face.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-face.Tpo"; exit 1; \
	fi
#	source='face.c' object='libg3d_la-face.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-face.Po' tmpdepfile='$(DEPDIR)/libg3d_la-face.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-face.obj `if test -f 'face.c'; then $(CYGPATH_W) 'face.c'; else $(CYGPATH_W) '$(srcdir)/face.c'; fi`

libg3d_la-face.lo: face.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-face.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-face.Tpo" \
	  -c -o libg3d_la-face.lo `test -f 'face.c' || echo '$(srcdir)/'`face.c; \
	then mv -f "$(DEPDIR)/libg3d_la-face.Tpo" "$(DEPDIR)/libg3d_la-face.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-face.Tpo"; exit 1; \
	fi
#	source='face.c' object='libg3d_la-face.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-face.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-face.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-face.lo `test -f 'face.c' || echo '$(srcdir)/'`face.c

libg3d_la-material.o: material.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-material.o -MD -MP -MF "$(DEPDIR)/libg3d_la-material.Tpo" \
	  -c -o libg3d_la-material.o `test -f 'material.c' || echo '$(srcdir)/'`material.c; \
	then mv -f "$(DEPDIR)/libg3d_la-material.Tpo" "$(DEPDIR)/libg3d_la-material.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-material.Tpo"; exit 1; \
	fi
#	source='material.c' object='libg3d_la-material.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-material.Po' tmpdepfile='$(DEPDIR)/libg3d_la-material.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-material.o `test -f 'material.c' || echo '$(srcdir)/'`material.c

libg3d_la-material.obj: material.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-material.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-material.Tpo" \
	  -c -o libg3d_la-material.obj `if test -f 'material.c'; then $(CYGPATH_W) 'material.c'; else $(CYGPATH_W) '$(srcdir)/material.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-material.Tpo" "$(DEPDIR)/libg3d_la-material.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-material.Tpo"; exit 1; \
	fi
#	source='material.c' object='libg3d_la-material.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-material.Po' tmpdepfile='$(DEPDIR)/libg3d_la-material.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-material.obj `if test -f 'material.c'; then $(CYGPATH_W) 'material.c'; else $(CYGPATH_W) '$(srcdir)/material.c'; fi`

libg3d_la-material.lo: material.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-material.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-material.Tpo" \
	  -c -o libg3d_la-material.lo `test -f 'material.c' || echo '$(srcdir)/'`material.c; \
	then mv -f "$(DEPDIR)/libg3d_la-material.Tpo" "$(DEPDIR)/libg3d_la-material.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-material.Tpo"; exit 1; \
	fi
#	source='material.c' object='libg3d_la-material.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-material.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-material.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-material.lo `test -f 'material.c' || echo '$(srcdir)/'`material.c

libg3d_la-texture.o: texture.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-texture.o -MD -MP -MF "$(DEPDIR)/libg3d_la-texture.Tpo" \
	  -c -o libg3d_la-texture.o `test -f 'texture.c' || echo '$(srcdir)/'`texture.c; \
	then mv -f "$(DEPDIR)/libg3d_la-texture.Tpo" "$(DEPDIR)/libg3d_la-texture.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-texture.Tpo"; exit 1; \
	fi
#	source='texture.c' object='libg3d_la-texture.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-texture.Po' tmpdepfile='$(DEPDIR)/libg3d_la-texture.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-texture.o `test -f 'texture.c' || echo '$(srcdir)/'`texture.c

libg3d_la-texture.obj: texture.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-texture.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-texture.Tpo" \
	  -c -o libg3d_la-texture.obj `if test -f 'texture.c'; then $(CYGPATH_W) 'texture.c'; else $(CYGPATH_W) '$(srcdir)/texture.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-texture.Tpo" "$(DEPDIR)/libg3d_la-texture.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-texture.Tpo"; exit 1; \
	fi
#	source='texture.c' object='libg3d_la-texture.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-texture.Po' tmpdepfile='$(DEPDIR)/libg3d_la-texture.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-texture.obj `if test -f 'texture.c'; then $(CYGPATH_W) 'texture.c'; else $(CYGPATH_W) '$(srcdir)/texture.c'; fi`

libg3d_la-texture.lo: texture.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-texture.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-texture.Tpo" \
	  -c -o libg3d_la-texture.lo `test -f 'texture.c' || echo '$(srcdir)/'`texture.c; \
	then mv -f "$(DEPDIR)/libg3d_la-texture.Tpo" "$(DEPDIR)/libg3d_la-texture.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-texture.Tpo"; exit 1; \
	fi
#	source='texture.c' object='libg3d_la-texture.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-texture.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-texture.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-texture.lo `test -f 'texture.c' || echo '$(srcdir)/'`texture.c

libg3d_la-read.o: read.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-read.o -MD -MP -MF "$(DEPDIR)/libg3d_la-read.Tpo" \
	  -c -o libg3d_la-read.o `test -f 'read.c' || echo '$(srcdir)/'`read.c; \
	then mv -f "$(DEPDIR)/libg3d_la-read.Tpo" "$(DEPDIR)/libg3d_la-read.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-read.Tpo"; exit 1; \
	fi
#	source='read.c' object='libg3d_la-read.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-read.Po' tmpdepfile='$(DEPDIR)/libg3d_la-read.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-read.o `test -f 'read.c' || echo '$(srcdir)/'`read.c

libg3d_la-read.obj: read.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-read.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-read.Tpo" \
	  -c -o libg3d_la-read.obj `if test -f 'read.c'; then $(CYGPATH_W) 'read.c'; else $(CYGPATH_W) '$(srcdir)/read.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-read.Tpo" "$(DEPDIR)/libg3d_la-read.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-read.Tpo"; exit 1; \
	fi
#	source='read.c' object='libg3d_la-read.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-read.Po' tmpdepfile='$(DEPDIR)/libg3d_la-read.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-read.obj `if test -f 'read.c'; then $(CYGPATH_W) 'read.c'; else $(CYGPATH_W) '$(srcdir)/read.c'; fi`

libg3d_la-read.lo: read.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-read.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-read.Tpo" \
	  -c -o libg3d_la-read.lo `test -f 'read.c' || echo '$(srcdir)/'`read.c; \
	then mv -f "$(DEPDIR)/libg3d_la-read.Tpo" "$(DEPDIR)/libg3d_la-read.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-read.Tpo"; exit 1; \
	fi
#	source='read.c' object='libg3d_la-read.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-read.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-read.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-read.lo `test -f 'read.c' || echo '$(srcdir)/'`read.c

libg3d_la-iff.o: iff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-iff.o -MD -MP -MF "$(DEPDIR)/libg3d_la-iff.Tpo" \
	  -c -o libg3d_la-iff.o `test -f 'iff.c' || echo '$(srcdir)/'`iff.c; \
	then mv -f "$(DEPDIR)/libg3d_la-iff.Tpo" "$(DEPDIR)/libg3d_la-iff.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-iff.Tpo"; exit 1; \
	fi
#	source='iff.c' object='libg3d_la-iff.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-iff.Po' tmpdepfile='$(DEPDIR)/libg3d_la-iff.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-iff.o `test -f 'iff.c' || echo '$(srcdir)/'`iff.c

libg3d_la-iff.obj: iff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-iff.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-iff.Tpo" \
	  -c -o libg3d_la-iff.obj `if test -f 'iff.c'; then $(CYGPATH_W) 'iff.c'; else $(CYGPATH_W) '$(srcdir)/iff.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-iff.Tpo" "$(DEPDIR)/libg3d_la-iff.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-iff.Tpo"; exit 1; \
	fi
#	source='iff.c' object='libg3d_la-iff.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-iff.Po' tmpdepfile='$(DEPDIR)/libg3d_la-iff.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-iff.obj `if test -f 'iff.c'; then $(CYGPATH_W) 'iff.c'; else $(CYGPATH_W) '$(srcdir)/iff.c'; fi`

libg3d_la-iff.lo: iff.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-iff.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-iff.Tpo" \
	  -c -o libg3d_la-iff.lo `test -f 'iff.c' || echo '$(srcdir)/'`iff.c; \
	then mv -f "$(DEPDIR)/libg3d_la-iff.Tpo" "$(DEPDIR)/libg3d_la-iff.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-iff.Tpo"; exit 1; \
	fi
#	source='iff.c' object='libg3d_la-iff.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-iff.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-iff.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-iff.lo `test -f 'iff.c' || echo '$(srcdir)/'`iff.c

libg3d_la-primitive.o: primitive.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-primitive.o -MD -MP -MF "$(DEPDIR)/libg3d_la-primitive.Tpo" \
	  -c -o libg3d_la-primitive.o `test -f 'primitive.c' || echo '$(srcdir)/'`primitive.c; \
	then mv -f "$(DEPDIR)/libg3d_la-primitive.Tpo" "$(DEPDIR)/libg3d_la-primitive.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-primitive.Tpo"; exit 1; \
	fi
#	source='primitive.c' object='libg3d_la-primitive.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-primitive.Po' tmpdepfile='$(DEPDIR)/libg3d_la-primitive.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-primitive.o `test -f 'primitive.c' || echo '$(srcdir)/'`primitive.c

libg3d_la-primitive.obj: primitive.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-primitive.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-primitive.Tpo" \
	  -c -o libg3d_la-primitive.obj `if test -f 'primitive.c'; then $(CYGPATH_W) 'primitive.c'; else $(CYGPATH_W) '$(srcdir)/primitive.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-primitive.Tpo" "$(DEPDIR)/libg3d_la-primitive.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-primitive.Tpo"; exit 1; \
	fi
#	source='primitive.c' object='libg3d_la-primitive.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-primitive.Po' tmpdepfile='$(DEPDIR)/libg3d_la-primitive.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-primitive.obj `if test -f 'primitive.c'; then $(CYGPATH_W) 'primitive.c'; else $(CYGPATH_W) '$(srcdir)/primitive.c'; fi`

libg3d_la-primitive.lo: primitive.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-primitive.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-primitive.Tpo" \
	  -c -o libg3d_la-primitive.lo `test -f 'primitive.c' || echo '$(srcdir)/'`primitive.c; \
	then mv -f "$(DEPDIR)/libg3d_la-primitive.Tpo" "$(DEPDIR)/libg3d_la-primitive.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-primitive.Tpo"; exit 1; \
	fi
#	source='primitive.c' object='libg3d_la-primitive.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-primitive.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-primitive.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-primitive.lo `test -f 'primitive.c' || echo '$(srcdir)/'`primitive.c

libg3d_la-vector.o: vector.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-vector.o -MD -MP -MF "$(DEPDIR)/libg3d_la-vector.Tpo" \
	  -c -o libg3d_la-vector.o `test -f 'vector.c' || echo '$(srcdir)/'`vector.c; \
	then mv -f "$(DEPDIR)/libg3d_la-vector.Tpo" "$(DEPDIR)/libg3d_la-vector.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-vector.Tpo"; exit 1; \
	fi
#	source='vector.c' object='libg3d_la-vector.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-vector.Po' tmpdepfile='$(DEPDIR)/libg3d_la-vector.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-vector.o `test -f 'vector.c' || echo '$(srcdir)/'`vector.c

libg3d_la-vector.obj: vector.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-vector.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-vector.Tpo" \
	  -c -o libg3d_la-vector.obj `if test -f 'vector.c'; then $(CYGPATH_W) 'vector.c'; else $(CYGPATH_W) '$(srcdir)/vector.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-vector.Tpo" "$(DEPDIR)/libg3d_la-vector.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-vector.Tpo"; exit 1; \
	fi
#	source='vector.c' object='libg3d_la-vector.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-vector.Po' tmpdepfile='$(DEPDIR)/libg3d_la-vector.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-vector.obj `if test -f 'vector.c'; then $(CYGPATH_W) 'vector.c'; else $(CYGPATH_W) '$(srcdir)/vector.c'; fi`

libg3d_la-vector.lo: vector.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-vector.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-vector.Tpo" \
	  -c -o libg3d_la-vector.lo `test -f 'vector.c' || echo '$(srcdir)/'`vector.c; \
	then mv -f "$(DEPDIR)/libg3d_la-vector.Tpo" "$(DEPDIR)/libg3d_la-vector.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-vector.Tpo"; exit 1; \
	fi
#	source='vector.c' object='libg3d_la-vector.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-vector.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-vector.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-vector.lo `test -f 'vector.c' || echo '$(srcdir)/'`vector.c

libg3d_la-matrix.o: matrix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-matrix.o -MD -MP -MF "$(DEPDIR)/libg3d_la-matrix.Tpo" \
	  -c -o libg3d_la-matrix.o `test -f 'matrix.c' || echo '$(srcdir)/'`matrix.c; \
	then mv -f "$(DEPDIR)/libg3d_la-matrix.Tpo" "$(DEPDIR)/libg3d_la-matrix.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-matrix.Tpo"; exit 1; \
	fi
#	source='matrix.c' object='libg3d_la-matrix.o' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-matrix.Po' tmpdepfile='$(DEPDIR)/libg3d_la-matrix.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-matrix.o `test -f 'matrix.c' || echo '$(srcdir)/'`matrix.c

libg3d_la-matrix.obj: matrix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-matrix.obj -MD -MP -MF "$(DEPDIR)/libg3d_la-matrix.Tpo" \
	  -c -o libg3d_la-matrix.obj `if test -f 'matrix.c'; then $(CYGPATH_W) 'matrix.c'; else $(CYGPATH_W) '$(srcdir)/matrix.c'; fi`; \
	then mv -f "$(DEPDIR)/libg3d_la-matrix.Tpo" "$(DEPDIR)/libg3d_la-matrix.Po"; \
	else rm -f "$(DEPDIR)/libg3d_la-matrix.Tpo"; exit 1; \
	fi
#	source='matrix.c' object='libg3d_la-matrix.obj' libtool=no \
#	depfile='$(DEPDIR)/libg3d_la-matrix.Po' tmpdepfile='$(DEPDIR)/libg3d_la-matrix.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-matrix.obj `if test -f 'matrix.c'; then $(CYGPATH_W) 'matrix.c'; else $(CYGPATH_W) '$(srcdir)/matrix.c'; fi`

libg3d_la-matrix.lo: matrix.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -MT libg3d_la-matrix.lo -MD -MP -MF "$(DEPDIR)/libg3d_la-matrix.Tpo" \
	  -c -o libg3d_la-matrix.lo `test -f 'matrix.c' || echo '$(srcdir)/'`matrix.c; \
	then mv -f "$(DEPDIR)/libg3d_la-matrix.Tpo" "$(DEPDIR)/libg3d_la-matrix.Plo"; \
	else rm -f "$(DEPDIR)/libg3d_la-matrix.Tpo"; exit 1; \
	fi
#	source='matrix.c' object='libg3d_la-matrix.lo' libtool=yes \
#	depfile='$(DEPDIR)/libg3d_la-matrix.Plo' tmpdepfile='$(DEPDIR)/libg3d_la-matrix.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libg3d_la_CFLAGS) $(CFLAGS) -c -o libg3d_la-matrix.lo `test -f 'matrix.c' || echo '$(srcdir)/'`matrix.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
