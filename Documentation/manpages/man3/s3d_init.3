'\" t
.\"     Title: s3d_init
.\"    Author: Simon Wunderlich
.\" Generator: DocBook XSL Stylesheets
.\"
.\"    Manual: s3d Manual
.\"    Source: s3d
.\"  Language: English
.\"
.TH "S3D_INIT" "3" "" "s3d" "s3d Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
s3d_init \- initialize s3d library
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <s3d\&.h>
.fi
.ft
.HP \w'int\ s3d_init('u
.BI "int s3d_init(int\ *" "argc" ", char\ ***" "argv" ", const\ char\ *" "name" ");"
.SH "DESCRIPTION"
.PP
This will initialize the s3d\-library and the connection to the Server\&. It will return 0 on success in server initialization\&. name specifies the your programs name\&.
.sp
.if n \{\
.RS 4
.\}
.nf
 int main(char argc, char **argv)
 {
         if (!s3d_init(&argc, &argv, "Hello world"))
         {
                 \&.\&.\&.
                 s3d_quit();
         }
         return 0;
 }
.fi
.if n \{\
.RE
.\}
.SH "AUTHOR"
.PP
\fBSimon Wunderlich\fR
.RS 4
Author of s3d
.RE
